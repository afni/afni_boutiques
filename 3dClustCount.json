{
    "command-line": "3dClustCount [PREFIX] [FINAL] [QUIET] [DATASET1] [...]",
    "description": "tool description",
    "inputs": [
        {
            "command-line-flag": "-prefix",
            "description": "Use string 'sss' as the prefix of the filename into which results will be summed.  The actual filename will be 'sss.clustcount.niml'.  If this file already exists, then the results from the current run will be summed into the existing results, and the file then re-written.",
            "id": "PREFIX",
            "name": "PREFIX",
            "optional": true,
            "type": "String",
            "value-key": "[PREFIX]"
        },
        {
            "command-line-flag": "-final",
            "description": "If this option is given, then the results will be output in a format like that used from 3dClustSim -- as 1D and NIML formatted files with probabilities of various cluster sizes. ++ You can use '-final' without any input datasets if you want to create the final output files from the saved '.clustcount.niml' output file from earlier runs.",
            "id": "FINAL",
            "name": "FINAL",
            "optional": true,
            "type": "String",
            "value-key": "[FINAL]"
        },
        {
            "command-line-flag": "-quiet",
            "description": "Don't print out the progress reports, etc. ++ Put this option first to quiet most informational messages.  -------- EXAMPLE: ------- The steps here are (a) Create a set of 250 3dGroupInCorr results from a set of 190 subjects, using 250 randomly located seed locations.  Note the use of '-sendall' to get the individual subject results -- these are used in the next step, and are in sub-bricks 2..191 -- the collective 3dGroupInCorr results (in sub-bricks 0..1) are not actually used here. (b) For each of these 250 output datasets, create 80 random splittings into 2 groups of 95 subjects each, and carry out a 2-sample t-test between these groups. ++ Note the use of program 2perm to create the random splittings into files QQ_A and QQ_B, drawn from sub-bricks 2..191 of the ${fred} datasets. ++ Note the use of the '[1dcat filename]' construction to specify which sub-bricks of the ${fred} dataset are used for input to the '-setX' options of 3dttest++. (c) Count clusters from the '[1]' sub-brick of the 80 t-test outputs -- the t-statistic sub-brick. ++  Note the use of a wildcard filename with a sub-brick selector: 'QQ*.HEAD[1]' -- 3dClustCount will do the wildcard expansion internally, then add the sub-brick selector '[1]' to each expanded dataset filename. (d) Produce the final report files for empirical cluster-size thresholds for 3dGroupInCorr analyses -- rather than rely on 3dClustSim's assumption of Gaussian-shaped spatial correlation structure. The syntax is C-shell (tcsh), naturally.  \\rm -f ABscat* 3dGroupInCorr -setA A.errts.grpincorr.niml                 \\ -setB B.errts.grpincorr.niml                  \\ -labelA A -labelB B -seedrad 5 -nosix -sendall \\ -batchRAND 250 ABscat foreach fred ( ABscat*.HEAD ) foreach nnn ( `count -dig 2 0 79` ) 2perm -prefix QQ 2 191 3dttest++ -setA ${fred}'[1dcat QQ_A]' \\ -setB ${fred}'[1dcat QQ_B]' \\ -no1sam -prefix QQ${nnn} end 3dClustCount -prefix ABcount 'QQ*.HEAD[1]' \\rm -f QQ* end 3dClustCount -final -prefix ABcount \\rm -f ABscat*  -------------------------------- ---- RW Cox -- August 2012 ----- --------------------------------  ++ Compile date = Sep  7 2018 {:}",
            "id": "QUIET",
            "name": "QUIET",
            "optional": true,
            "type": "String",
            "value-key": "[QUIET]"
        },
        {
            "description": "NA",
            "id": "dataset1",
            "name": "dataset1",
            "optional": false,
            "type": "String",
            "value-key": "[DATASET1]"
        },
        {
            "description": "NA",
            "id": "...",
            "name": "...",
            "optional": false,
            "type": "String",
            "value-key": "[...]"
        }
    ],
    "name": "tool name",
    "schema-version": "0.5",
    "suggested-resources": {
        "cpu-cores": 1,
        "ram": 1,
        "walltime-estimate": 60
    },
    "tags": {},
    "tool-version": "v0.1.0"
}