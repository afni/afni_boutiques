{
    "command-line": "3dmaskdump [MASK] [MRANGE] [INDEX] [NOIJK] [XYZ] [O] [CMASK] [XBOX] [NBOX] [DBOX] [IBOX] [XBALL] [DBALL] [NBALL] [NOZERO] [N_RAND] [N_RANDSEED] [NIML] [QUIET] [DATASET] [...]",
    "description": "tool description",
    "inputs": [
        {
            "command-line-flag": "-mask",
            "description": "-mask mset   Means to use the dataset 'mset' as a mask: Only voxels with nonzero values in 'mset' will be printed from 'dataset'.  Note that the mask dataset and the input dataset must have the same number of voxels.",
            "id": "MASK",
            "name": "MASK",
            "optional": true,
            "type": "String",
            "value-key": "[MASK]"
        },
        {
            "command-line-flag": "-mrange",
            "description": "-mrange a b  Means to further restrict the voxels from 'mset' so that only those mask values between 'a' and 'b' (inclusive) will be used.  If this option is not given, all nonzero values from 'mset' are used. Note that if a voxel is zero in 'mset', then it won't be included, even if a < 0 < b.",
            "id": "MRANGE",
            "name": "MRANGE",
            "optional": true,
            "type": "String",
            "value-key": "[MRANGE]"
        },
        {
            "command-line-flag": "-index",
            "description": "-index       Means to write out the dataset index values.",
            "id": "INDEX",
            "name": "INDEX",
            "optional": true,
            "type": "String",
            "value-key": "[INDEX]"
        },
        {
            "command-line-flag": "-noijk",
            "description": "-noijk       Means not to write out the i,j,k values.",
            "id": "NOIJK",
            "name": "NOIJK",
            "optional": true,
            "type": "String",
            "value-key": "[NOIJK]"
        },
        {
            "command-line-flag": "-xyz",
            "description": "-xyz         Means to write the x,y,z coordinates from the 1st input dataset at the start of each output line.  These coordinates are in the 'RAI' (DICOM) order.",
            "id": "XYZ",
            "name": "XYZ",
            "optional": true,
            "type": "String",
            "value-key": "[XYZ]"
        },
        {
            "command-line-flag": "-o",
            "description": "-o fname     Means to write output to file 'fname'. [default = stdout, which you won't like]",
            "id": "O",
            "name": "O",
            "optional": true,
            "type": "String",
            "value-key": "[O]"
        },
        {
            "command-line-flag": "-cmask",
            "description": "-cmask 'opts' Means to execute the options enclosed in single quotes as a 3dcalc-like program, and produce produce a mask from the resulting 3D brick. Examples:",
            "id": "CMASK",
            "name": "CMASK",
            "optional": true,
            "type": "String",
            "value-key": "[CMASK]"
        },
        {
            "command-line-flag": "-xbox",
            "description": "7 31:33 44 means a box from (x,y,z)=(22,31,44) to (27,33,44). NOTE: dataset coordinates are NOT the coordinates you typically see in AFNI's main controller top left corner. Those coordinates are typically in either RAI/DICOM order or in LPI/SPM order and should be used with -dbox and",
            "id": "XBOX",
            "name": "XBOX",
            "optional": true,
            "type": "String",
            "value-key": "[XBOX]"
        },
        {
            "command-line-flag": "-nbox",
            "description": "-nbox, respectively.",
            "id": "NBOX",
            "name": "NBOX",
            "optional": true,
            "type": "String",
            "value-key": "[NBOX]"
        },
        {
            "command-line-flag": "-dbox",
            "description": "-dbox x y z   Means the same as -xbox, but the coordinates are in RAI/DICOM order (+x=Left, +y=Posterior, +z=Superior). If your AFNI environment variable AFNI_ORIENT is set to RAI, these coordinates correspond to those you'd enter into the 'Jump to (xyz)' control in AFNI, and to those output by 3dclust. NOTE: It is possible to make AFNI and/or 3dclust output coordinates in an order different from the one specified by AFNI_ORIENT, but you'd have to work hard on that. In any case, the order is almost always specified along with the coordinates. If you see RAI/DICOM, then use",
            "id": "DBOX",
            "name": "DBOX",
            "optional": true,
            "type": "String",
            "value-key": "[DBOX]"
        },
        {
            "command-line-flag": "-ibox",
            "description": "-ibox i j k   Means to put a 'mask' down at the voxel indexes given by 'i j k'.  By default, this picks out just 1 voxel.  Again, you can use a ':' to specify a range (now in voxels) of locations. Notes: * Boxes are cumulative; that is, if you specify more than 1 box, you'll get more than one region. * If a -mask and/or -cmask option is used, then the INTERSECTION of the boxes with these masks determines which voxels are output; that is, a voxel must be inside some box AND inside the mask in order to be selected for output. * If boxes select more than 1 voxel, the output lines are NOT necessarily in the order of the options on the command line. * Coordinates (for -xbox, -dbox, and -nbox) are relative to the first dataset on the command line.",
            "id": "IBOX",
            "name": "IBOX",
            "optional": true,
            "type": "String",
            "value-key": "[IBOX]"
        },
        {
            "command-line-flag": "-xball",
            "description": "-xball x y z r  Means to put a ball (sphere) mask down at dataset coordinates (x,y,z) with radius r.",
            "id": "XBALL",
            "name": "XBALL",
            "optional": true,
            "type": "String",
            "value-key": "[XBALL]"
        },
        {
            "command-line-flag": "-dball",
            "description": "-dball x y z r  Same, but (x,y,z) are in RAI/DICOM order.",
            "id": "DBALL",
            "name": "DBALL",
            "optional": true,
            "type": "String",
            "value-key": "[DBALL]"
        },
        {
            "command-line-flag": "-nball",
            "description": "-nball x y z r  Same, but (x,y,z) are in LPI/SPM order. Notes: * The combined (set UNION) of all ball and/or box masks is created first.  Then, if a -mask and/or -cmask option was used, then the ball+box mask will be INTERSECTED with the existing mask.",
            "id": "NBALL",
            "name": "NBALL",
            "optional": true,
            "type": "String",
            "value-key": "[NBALL]"
        },
        {
            "command-line-flag": "-nozero",
            "description": "-nozero       Means to skip output of any voxel where all the data values are zero.",
            "id": "NOZERO",
            "name": "NOZERO",
            "optional": true,
            "type": "String",
            "value-key": "[NOZERO]"
        },
        {
            "command-line-flag": "-n_rand",
            "description": "-n_rand N_RAND Means to keep only N_RAND randomly selected voxels from what would have been the output.",
            "id": "N_RAND",
            "name": "N_RAND",
            "optional": true,
            "type": "String",
            "value-key": "[N_RAND]"
        },
        {
            "command-line-flag": "-n_randseed",
            "description": "-n_randseed SEED  Seed the random number generator with SEED, instead of the default seed of 1234",
            "id": "N_RANDSEED",
            "name": "N_RANDSEED",
            "optional": true,
            "type": "String",
            "value-key": "[N_RANDSEED]"
        },
        {
            "command-line-flag": "-niml",
            "description": "-niml name    Means to output data in the XML/NIML format that is compatible with input back to AFNI via the READ_NIML_FILE command. * 'name' is the 'target_name' for the NIML header field, which is the name that will be assigned to the dataset when it is sent into AFNI. * Also implies '-noijk' and '-xyz' and '-nozero'.",
            "id": "NIML",
            "name": "NIML",
            "optional": true,
            "type": "String",
            "value-key": "[NIML]"
        },
        {
            "command-line-flag": "-quiet",
            "description": "-quiet        Means not to print progress messages to stderr.  Inputs after the last option are datasets whose values you want to be dumped out.  These datasets (and the mask) can use the sub-brick selection mechanism (described in the output of '3dcalc -help') to choose which values you get.  Each selected voxel gets one line of output: i j k val val val .... where (i,j,k) = 3D index of voxel in the dataset arrays, and val = the actual voxel value.  Note that if you want the mask value to be output, you have to include that dataset in the dataset input list again, after you use it in the '-mask' option.  * To eliminate the 'i j k' columns, use the '-noijk' option. * To add spatial coordinate columns, use the '-xyz' option.  N.B.: This program doesn't work with complex-valued datasets!  INPUT DATASET NAMES ------------------- This program accepts datasets that are modified on input according to the following schemes: 'r1+orig[3..5]'                                    {sub-brick selector} 'r1+orig<100..200>'                                {sub-range selector} 'r1+orig[3..5]<100..200>'                          {both selectors} '3dcalc( -a r1+orig -b r2+orig -expr 0.5*(a+b) )'  {calculation} For the gruesome details, see the output of 'afni -help'.  ++ Compile date = Sep  7 2018 {:}",
            "id": "QUIET",
            "name": "QUIET",
            "optional": true,
            "type": "String",
            "value-key": "[QUIET]"
        },
        {
            "description": "NA",
            "id": "dataset",
            "name": "dataset",
            "optional": false,
            "type": "String",
            "value-key": "[DATASET]"
        },
        {
            "description": "NA",
            "id": "...",
            "name": "...",
            "optional": false,
            "type": "String",
            "value-key": "[...]"
        }
    ],
    "name": "tool name",
    "schema-version": "0.5",
    "suggested-resources": {
        "cpu-cores": 1,
        "ram": 1,
        "walltime-estimate": 60
    },
    "tags": {},
    "tool-version": "v0.1.0"
}