{
    "command-line": "3dInvFMRI [DATA] [INPUT] [MAP] [MAPWT] [MASK] [BASE] [POLORT] [OUT] [METHOD] [ALPHA] [FIR5] [MEDIAN5] [1]",
    "description": "tool description",
    "inputs": [
        {
            "command-line-flag": "-data",
            "description": "-data yyy  = *OR*     = Defines input 3D+time dataset [a non-optional option].",
            "id": "DATA",
            "name": "DATA",
            "optional": true,
            "type": "String",
            "value-key": "[DATA]"
        },
        {
            "command-line-flag": "-input",
            "description": "-input yyy =",
            "id": "INPUT",
            "name": "INPUT",
            "optional": false,
            "type": "String",
            "value-key": "[INPUT]"
        },
        {
            "command-line-flag": "-map",
            "description": "Defines activation map; 'aaa' should be a bucket dataset, each sub-brick of which defines the beta weight map for an unknown stimulus time series [also non-optional].",
            "id": "MAP",
            "name": "MAP",
            "optional": true,
            "type": "String",
            "value-key": "[MAP]"
        },
        {
            "command-line-flag": "-mapwt",
            "description": "Defines a weighting factor to use for each element of the map.  The dataset 'www' can have either 1 sub-brick, or the same number as in the -map dataset.  In the first case, in each voxel, each sub-brick of the map gets the same weight in the least squares equations. [default: all weights are 1]",
            "id": "MAPWT",
            "name": "MAPWT",
            "optional": true,
            "type": "String",
            "value-key": "[MAPWT]"
        },
        {
            "command-line-flag": "-mask",
            "description": "Defines a mask dataset, to restrict input voxels from",
            "id": "MASK",
            "name": "MASK",
            "optional": true,
            "type": "String",
            "value-key": "[MASK]"
        },
        {
            "command-line-flag": "-base",
            "description": "Each column of the 1D file 'fff' defines a baseline time series; these columns should be the same length as number of time points in 'yyy'.  Multiple -base options can be given.",
            "id": "BASE",
            "name": "BASE",
            "optional": true,
            "type": "String",
            "value-key": "[BASE]"
        },
        {
            "command-line-flag": "-polort",
            "description": "Adds polynomials of order 'pp' to the baseline collection. The default baseline model is '-polort 0' (constant). To specify no baseline model at all, use '-polort -1'.",
            "id": "POLORT",
            "name": "POLORT",
            "optional": true,
            "type": "String",
            "value-key": "[POLORT]"
        },
        {
            "command-line-flag": "-out",
            "description": "Name of 1D output file will be 'vvv'. [default = '-', which is stdout; probably not good]",
            "id": "OUT",
            "name": "OUT",
            "optional": true,
            "type": "String",
            "value-key": "[OUT]"
        },
        {
            "command-line-flag": "-method",
            "description": "Determines the method to use.  'M' is a single letter:",
            "id": "METHOD",
            "name": "METHOD",
            "optional": true,
            "type": "String",
            "value-key": "[METHOD]"
        },
        {
            "command-line-flag": "-alpha",
            "description": "Set the 'alpha' factor to 'aa'; alpha is used to penalize large values of the output vectors.  Default is 0. A large-ish value for alpha would be 0.1.",
            "id": "ALPHA",
            "name": "ALPHA",
            "optional": true,
            "type": "String",
            "value-key": "[ALPHA]"
        },
        {
            "command-line-flag": "-fir5",
            "description": "Smooth the results with a 5 point lowpass FIR filter.",
            "id": "FIR5",
            "name": "FIR5",
            "optional": true,
            "type": "String",
            "value-key": "[FIR5]"
        },
        {
            "command-line-flag": "-median5",
            "description": "Smooth the results with a 5 point median filter. [default: no smoothing; only 1 of these can be used] ------------------------------------------------------------------- METHODS: Formulate the problem as Y = V A' + F C' + errors where Y = data matrix      (N x M) [from -data] V = stimulus         (N x p) [to -out] A = map matrix       (M x p) [from -map] F = baseline matrix  (N x q) [from -base and -polort] C = baseline weights (M x q) [not computed] N = time series length = length of -data file M = number of voxels in mask p = number of stimulus time series to estimate = number of parameters in -map file q = number of baseline parameters and ' = matrix transpose operator Next, define matrix Z (Y detrended relative to columns of F) by",
            "id": "MEDIAN5",
            "name": "MEDIAN5",
            "optional": true,
            "type": "String",
            "value-key": "[MEDIAN5]"
        },
        {
            "command-line-flag": "-1",
            "description": "-1 Z = [I - F(F'F)  F']  Y ------------------------------------------------------------------- The method C solution is given by",
            "id": "1",
            "name": "1",
            "optional": true,
            "type": "String",
            "value-key": "[1]"
        }
    ],
    "name": "tool name",
    "schema-version": "0.5",
    "suggested-resources": {
        "cpu-cores": 1,
        "ram": 1,
        "walltime-estimate": 60
    },
    "tags": {},
    "tool-version": "v0.1.0"
}