{
    "command-line": "3dFFT [ABS] [PHASE] [COMPLEX] [INVERSE] [LX] [LY] [LZ] [ALTIN] [ALTOUT] [INPUT] [PREFIX] [DATASET]",
    "description": "tool description",
    "inputs": [
        {
            "command-line-flag": "-abs",
            "description": "Outputs the magnitude of the FFT [default]",
            "id": "ABS",
            "name": "ABS",
            "optional": true,
            "type": "String",
            "value-key": "[ABS]"
        },
        {
            "command-line-flag": "-phase",
            "description": "Outputs the phase of the FFT (-PI..PI == no unwrapping!)",
            "id": "PHASE",
            "name": "PHASE",
            "optional": true,
            "type": "String",
            "value-key": "[PHASE]"
        },
        {
            "command-line-flag": "-complex",
            "description": "Outputs the complex-valued FFT",
            "id": "COMPLEX",
            "name": "COMPLEX",
            "optional": true,
            "type": "String",
            "value-key": "[COMPLEX]"
        },
        {
            "command-line-flag": "-inverse",
            "description": "Does the inverse FFT instead of the forward FFT",
            "id": "INVERSE",
            "name": "INVERSE",
            "optional": true,
            "type": "String",
            "value-key": "[INVERSE]"
        },
        {
            "command-line-flag": "-Lx",
            "description": "Use FFT of length 'xx' in the x-direction",
            "id": "LX",
            "name": "LX",
            "optional": true,
            "type": "String",
            "value-key": "[LX]"
        },
        {
            "command-line-flag": "-Ly",
            "description": "Use FFT of length 'yy' in the y-direction",
            "id": "LY",
            "name": "LY",
            "optional": true,
            "type": "String",
            "value-key": "[LY]"
        },
        {
            "command-line-flag": "-Lz",
            "description": "Use FFT of length 'zz' in the z-direction * Set a length to 0 to skip the FFT in that direction",
            "id": "LZ",
            "name": "LZ",
            "optional": true,
            "type": "String",
            "value-key": "[LZ]"
        },
        {
            "command-line-flag": "-altIN",
            "description": "Alternate signs of input data before FFT, to bring zero frequency from edge of FFT-space to center of grid for cosmetic purposes.",
            "id": "ALTIN",
            "name": "ALTIN",
            "optional": true,
            "type": "String",
            "value-key": "[ALTIN]"
        },
        {
            "command-line-flag": "-altOUT",
            "description": "Alternate signs of output data after FFT.  If you use '-altI' on the forward transform, then you should use '-altO' an the inverse transform, to get the signs of the recovered image correct. **N.B.: You cannot use '-altIN' and '-altOUT' in the same run!",
            "id": "ALTOUT",
            "name": "ALTOUT",
            "optional": true,
            "type": "String",
            "value-key": "[ALTOUT]"
        },
        {
            "command-line-flag": "-input",
            "description": "Read the input dataset from 'dd', instead of from the last argument on the command line.",
            "id": "INPUT",
            "name": "INPUT",
            "optional": false,
            "type": "String",
            "value-key": "[INPUT]"
        },
        {
            "command-line-flag": "-prefix",
            "description": "Use 'pp' for the output dataset prefix.  Notes ===== * In the present avatar, only 1 sub-brick will be processed.  * The program can only do FFT lengths that are positive even integers.  * The 'x', 'y', and 'z' axes here refer to the order the data is stored, not DICOM coordinates; cf. 3dinfo.  * If you force (via '-Lx' etc.) an FFT length that is not allowed, the program will stop with an error message.  * If you force an FFT length that is shorter than an dataset axis dimension, the program will stop with an error message.  * If you don't force an FFT length along a particular axis, the program will pick the smallest legal value that is greater than or equal to the corresponding dataset dimension. + e.g., 123 would be increased to 124.  * If an FFT length is longer than an axis length, then the input data in that direction is zero-padded at the end.  * For -abs and -phase, the output dataset is in float format.  * If you do the forward and inverse FFT, then you should get back the original dataset, except for roundoff error and except that the new dataset axis dimensions may be longer than the original.  * Forward FFT = sum_{k=0..N-1} [ exp(-2*PI*i*k/N) * data(k) ]  * Inverse FFT = sum_{k=0..N-1} [ exp(+2*PI*i*k/N) * data(k) ] / N  * Started a long time ago, but only finished in Aug 2009 at the request of John Butman, because he asked so nicely. (Now pay up!)  ++ Compile date = Sep  7 2018 {:}",
            "id": "PREFIX",
            "name": "PREFIX",
            "optional": true,
            "type": "String",
            "value-key": "[PREFIX]"
        },
        {
            "description": "NA",
            "id": "dataset",
            "name": "dataset",
            "optional": false,
            "type": "String",
            "value-key": "[DATASET]"
        }
    ],
    "name": "tool name",
    "schema-version": "0.5",
    "suggested-resources": {
        "cpu-cores": 1,
        "ram": 1,
        "walltime-estimate": 60
    },
    "tags": {},
    "tool-version": "v0.1.0"
}