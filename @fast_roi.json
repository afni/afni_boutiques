{
    "command-line": "@fast_roi [REGION] [DRAWN_ROI] [ANAT] [ANAT_NS] [BASE] [ROI_GRID] [PREFIX] [TIME] [TWOPASS] [HELP] [<-REGION] [REGION1>]",
    "description": "tool description",
    "inputs": [
        {
            "command-line-flag": "-region",
            "description": "Symbolic atlas-based region name. See whereami -help for details. You can use repeated instances of this option to specify a mask of numerous regions. Each region is assigned a power of 2 integer in the output mask",
            "id": "REGION",
            "name": "REGION",
            "optional": true,
            "type": "String",
            "value-key": "[REGION]"
        },
        {
            "command-line-flag": "-drawn_roi",
            "description": "-drawn_roi ROI+tlrc: A user drawn ROI in standard (tlrc) space. This ROI gets added with the REGION roi.",
            "id": "DRAWN_ROI",
            "name": "DRAWN_ROI",
            "optional": true,
            "type": "String",
            "value-key": "[DRAWN_ROI]"
        },
        {
            "command-line-flag": "-anat",
            "description": "Anat is the volume to be put in std space. It does not need to be a T1 weighted volume but you need to choose a similarly weighted TLRC_BASE. If ANAT is already in TLRC space then there is no need for -base option below.",
            "id": "ANAT",
            "name": "ANAT",
            "optional": true,
            "type": "String",
            "value-key": "[ANAT]"
        },
        {
            "command-line-flag": "-anat_ns",
            "description": "Same as above, but it indicates that the skull has been removed already.",
            "id": "ANAT_NS",
            "name": "ANAT_NS",
            "optional": true,
            "type": "String",
            "value-key": "[ANAT_NS]"
        },
        {
            "command-line-flag": "-base",
            "description": "Name of reference TLRC volume. See @auto_tlrc for more details on this option. Note that for the purposes of speeding up the process, you might want to create a lower resolution version of the templates in the AFNI. In the example shown below, TT_N27_r2+tlrc was created with: 3dresample  -dxyz 2 2 2 -rmode Li -prefix ./TT_N27_r2 \\ -input /usr/local/bin/TT_N27+tlrc. where TT_N27+tlrc is usually in the directory under which afni resides.",
            "id": "BASE",
            "name": "BASE",
            "optional": true,
            "type": "String",
            "value-key": "[BASE]"
        },
        {
            "command-line-flag": "-roi_grid",
            "description": "The volume that defines the final ROI's grid.",
            "id": "ROI_GRID",
            "name": "ROI_GRID",
            "optional": true,
            "type": "String",
            "value-key": "[ROI_GRID]"
        },
        {
            "command-line-flag": "-prefix",
            "description": "PREFIX is used to tag the names the ROIs output.",
            "id": "PREFIX",
            "name": "PREFIX",
            "optional": true,
            "type": "String",
            "value-key": "[PREFIX]"
        },
        {
            "command-line-flag": "-time",
            "description": "A flag to make the script output elapsed time reports.",
            "id": "TIME",
            "name": "TIME",
            "optional": true,
            "type": "String",
            "value-key": "[TIME]"
        },
        {
            "command-line-flag": "-twopass",
            "description": "Make TLRC transformation more robust. Use it if TLRC transform step fails.",
            "id": "TWOPASS",
            "name": "TWOPASS",
            "optional": true,
            "type": "String",
            "value-key": "[TWOPASS]"
        },
        {
            "command-line-flag": "-help",
            "description": "Output this message.  The ROI of interest is in a volume called ROI.PREFIX+orig.  The script follows the following steps: 1- Strip skull off of ANAT+orig Output is called nosk.ANAT+orig and is reused if present. 2- Transform nosk.ANAT+orig to TLRC space. Output is called nosk.ANAT+tlrc and is reused if present. 3- Create ROI in TLRC space using 3dcalc. Output is ROIt.PREFIX+tlrc and is overwritten if present. 4- Create ROI in GRID's orig space using 3dFractionize. Output is ROI.PREFIX+orig and is overwritten if present.  Examples ( require AFNI_data3/afni, and 3dresample's output from command shown above): @fast_roi  -region CA_N27_ML::Hip -region CA_N27_ML::Amygda \\ -base TT_N27_r2+tlrc. -anat anat1+orig.HEAD  \\ -roi_grid epi_r1+orig -prefix toy -time  If you want another ROI given the same -anat and -base volumes: @fast_roi  -region CA_N27_ML::Superior_Temporal_Gyrus \\",
            "id": "HELP",
            "name": "HELP",
            "optional": true,
            "type": "String",
            "value-key": "[HELP]"
        },
        {
            "description": "NA",
            "id": "<-region",
            "name": "<-region",
            "optional": false,
            "type": "String",
            "value-key": "[<-REGION]"
        },
        {
            "description": "NA",
            "id": "REGION1>",
            "name": "REGION1>",
            "optional": false,
            "type": "String",
            "value-key": "[REGION1>]"
        }
    ],
    "name": "tool name",
    "schema-version": "0.5",
    "suggested-resources": {
        "cpu-cores": 1,
        "ram": 1,
        "walltime-estimate": 60
    },
    "tags": {},
    "tool-version": "v0.1.0"
}