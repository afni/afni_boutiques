{
    "command-line": "plugout_drive [HOST] [SHM] [V] [PORT] [MAXWAIT] [NAME] [COM] [QUIT] [NP] [NPQ] [NPB] [MAX_PORT_BLOC] [MAX_PORT_BLOC_QUIET] [NUM_ASSIGNED_PORTS] [NUM_ASSIGNED_PORTS_QUIET] [H] [HELP] [H_VIEW] [HVIEW] [H_WEB] [HWEB] [H_FIND] [H_RAW] [H_SPX] [H_ASPX] [ALL_OPTS] [OVERWRITE] [OK_1D_TEXT] [DNAME] [VNAME] [SKIP_AFNIRC] [PAD_TO_NODE] [PIF] [ECHO_EDU]",
    "description": "tool description",
    "inputs": [
        {
            "command-line-flag": "-host",
            "description": "-host name    Means to connect to AFNI running on the computer 'name' using TCP/IP.  The default is to connect on the current host 'localhost' using TCP/IP.",
            "id": "HOST",
            "name": "HOST",
            "optional": true,
            "type": "String",
            "value-key": "[HOST]"
        },
        {
            "command-line-flag": "-shm",
            "description": "-shm          Means to connect to the current host using shared memory.  There is no reason to do this unless you are transferring huge quantities of data. N.B.:  '-host .' is equivalent to '-shm'.",
            "id": "SHM",
            "name": "SHM",
            "optional": true,
            "type": "String",
            "value-key": "[SHM]"
        },
        {
            "command-line-flag": "-v",
            "description": "-v            Verbose mode.",
            "id": "V",
            "name": "V",
            "optional": true,
            "type": "String",
            "value-key": "[V]"
        },
        {
            "command-line-flag": "-port",
            "description": "-port pp      Use TCP/IP port number 'pp'.  The default is 8099, but if two plugouts are running on the same computer, they must use different ports. For a list of currently used ports use afni -list_ports",
            "id": "PORT",
            "name": "PORT",
            "optional": true,
            "type": "String",
            "value-key": "[PORT]"
        },
        {
            "command-line-flag": "-maxwait",
            "description": "-maxwait t    Wait a maximum of 't' seconds for AFNI to connect; if the connection doesn't happen in that time, exit. [default wait time is 9 seconds]",
            "id": "MAXWAIT",
            "name": "MAXWAIT",
            "optional": true,
            "type": "String",
            "value-key": "[MAXWAIT]"
        },
        {
            "command-line-flag": "-name",
            "description": "-name sss     Use the string 'sss' for the name that AFNI assigns to this plugout.  The default is something stupid.",
            "id": "NAME",
            "name": "NAME",
            "optional": true,
            "type": "String",
            "value-key": "[NAME]"
        },
        {
            "command-line-flag": "-com",
            "description": "-com 'ACTION DATA'  Execute the following command. For example:",
            "id": "COM",
            "name": "COM",
            "optional": true,
            "type": "String",
            "value-key": "[COM]"
        },
        {
            "command-line-flag": "-quit",
            "description": "-quit         Quit after you are done with all the -com commands. The default is for the program to wait for more commands to be typed at the terminal's prompt.  NOTES: You will need to turn plugouts on in AFNI using one of the following methods: 1. Including '-yesplugouts' as an option on AFNI's command line 2. From AFNI GUI: Define Datamode->Misc->Start Plugouts 3. From AFNI GUI: Press the 'NIML+PO' button (near 'Overlay') 4. Set environment variable AFNI_YESPLUGOUTS to YES in .afnirc Otherwise, AFNI won't be listening for a plugout connection. [AFNI does't listen for socket connections, unless] [it is told to,  in order to avoid the overhead of] [checking for incoming data every few milliseconds]  This program's exit status will be 1 if it couldn't connect to AFNI at all.  Otherwise, the exit status will be 0. You could use this feature in a script to check if a copy of AFNI is ready to rumble, and if not then start one, as in the following csh fragment: plugout_drive -maxwait 1 -com 'OPEN_WINDOW axialimage' if( $status == 1 )then afni -yesplugouts & sleep 2 ; plugout_drive -com 'OPEN_WINDOW axialimage' endif  To have different plugout_* programs talking to different AFNI, use the -np* options below",
            "id": "QUIT",
            "name": "QUIT",
            "optional": true,
            "type": "String",
            "value-key": "[QUIT]"
        },
        {
            "command-line-flag": "-np",
            "description": "Provide a port offset to allow multiple instances of AFNI <--> SUMA, AFNI <--> 3dGroupIncorr, or any other programs that communicate together to operate on the same machine. All ports are assigned numbers relative to PORT_OFFSET. The same PORT_OFFSET value must be used on all programs that are to talk together. PORT_OFFSET is an integer in the inclusive range [1025 to 65500]. When you want to use multiple instances of communicating programs, be sure the PORT_OFFSETS you use differ by about 50 or you may still have port conflicts. A BETTER approach is to use -npb below.",
            "id": "NP",
            "name": "NP",
            "optional": true,
            "type": "String",
            "value-key": "[NP]"
        },
        {
            "command-line-flag": "-npq",
            "description": "Like -np, but more quiet in the face of adversity.",
            "id": "NPQ",
            "name": "NPQ",
            "optional": true,
            "type": "String",
            "value-key": "[NPQ]"
        },
        {
            "command-line-flag": "-npb",
            "description": "Similar to -np, except it is easier to use. PORT_OFFSET_BLOC is an integer between 0 and MAX_BLOC. MAX_BLOC is around 4000 for now, but it might decrease as we use up more ports in AFNI. You should be safe for the next 10 years if you stay under 2000. Using this function reduces your chances of causing port conflicts.  See also afni and suma options: -list_ports and -port_number for information about port number assignments.  You can also provide a port offset with the environment variable AFNI_PORT_OFFSET. Using -np overrides AFNI_PORT_OFFSET.",
            "id": "NPB",
            "name": "NPB",
            "optional": true,
            "type": "String",
            "value-key": "[NPB]"
        },
        {
            "command-line-flag": "-max_port_bloc",
            "description": "Print the current value of MAX_BLOC and exit. Remember this value can get smaller with future releases. Stay under 2000.",
            "id": "MAX_PORT_BLOC",
            "name": "MAX_PORT_BLOC",
            "optional": true,
            "type": "String",
            "value-key": "[MAX_PORT_BLOC]"
        },
        {
            "command-line-flag": "-max_port_bloc_quiet",
            "description": "Spit MAX_BLOC value only and exit.",
            "id": "MAX_PORT_BLOC_QUIET",
            "name": "MAX_PORT_BLOC_QUIET",
            "optional": true,
            "type": "String",
            "value-key": "[MAX_PORT_BLOC_QUIET]"
        },
        {
            "command-line-flag": "-num_assigned_ports",
            "description": "Print the number of assigned ports used by AFNI then quit.",
            "id": "NUM_ASSIGNED_PORTS",
            "name": "NUM_ASSIGNED_PORTS",
            "optional": true,
            "type": "String",
            "value-key": "[NUM_ASSIGNED_PORTS]"
        },
        {
            "command-line-flag": "-num_assigned_ports_quiet",
            "description": "Do it quietly.  Port Handling Examples: ----------------------- Say you want to run three instances of AFNI <--> SUMA. For the first you just do: suma -niml -spec ... -sv ...  & afni -niml & Then for the second instance pick an offset bloc, say 1 and run suma -niml -npb 1 -spec ... -sv ...  & afni -niml -npb 1 & And for yet another instance: suma -niml -npb 2 -spec ... -sv ...  & afni -niml -npb 2 & etc.  Since you can launch many instances of communicating programs now, you need to know wich SUMA window, say, is talking to which AFNI. To sort this out, the titlebars now show the number of the bloc of ports they are using. When the bloc is set either via environment variables AFNI_PORT_OFFSET or AFNI_PORT_BLOC, or with one of the -np* options, window title bars change from [A] to [A#] with # being the resultant bloc number. In the examples above, both AFNI and SUMA windows will show [A2] when -npb is 2.   Global Options (available to all AFNI/SUMA programs)",
            "id": "NUM_ASSIGNED_PORTS_QUIET",
            "name": "NUM_ASSIGNED_PORTS_QUIET",
            "optional": true,
            "type": "String",
            "value-key": "[NUM_ASSIGNED_PORTS_QUIET]"
        },
        {
            "command-line-flag": "-h",
            "description": "Mini help, at time, same as -help in many cases.",
            "id": "H",
            "name": "H",
            "optional": true,
            "type": "String",
            "value-key": "[H]"
        },
        {
            "command-line-flag": "-help",
            "description": "The entire help output",
            "id": "HELP",
            "name": "HELP",
            "optional": true,
            "type": "String",
            "value-key": "[HELP]"
        },
        {
            "command-line-flag": "-h_view",
            "description": "Open help in text editor. AFNI will try to find a GUI editor",
            "id": "H_VIEW",
            "name": "H_VIEW",
            "optional": true,
            "type": "String",
            "value-key": "[H_VIEW]"
        },
        {
            "command-line-flag": "-hview",
            "description": "on your machine. You can control which it should use by setting environment variable AFNI_GUI_EDITOR.",
            "id": "HVIEW",
            "name": "HVIEW",
            "optional": true,
            "type": "String",
            "value-key": "[HVIEW]"
        },
        {
            "command-line-flag": "-h_web",
            "description": "Open help in web browser. AFNI will try to find a browser.",
            "id": "H_WEB",
            "name": "H_WEB",
            "optional": true,
            "type": "String",
            "value-key": "[H_WEB]"
        },
        {
            "command-line-flag": "-hweb",
            "description": "on your machine. You can control which it should use by setting environment variable AFNI_GUI_EDITOR.",
            "id": "HWEB",
            "name": "HWEB",
            "optional": true,
            "type": "String",
            "value-key": "[HWEB]"
        },
        {
            "command-line-flag": "-h_find",
            "description": "Look for lines in this programs's -help output that match (approximately) WORD.",
            "id": "H_FIND",
            "name": "H_FIND",
            "optional": true,
            "type": "String",
            "value-key": "[H_FIND]"
        },
        {
            "command-line-flag": "-h_raw",
            "description": "Help string unedited",
            "id": "H_RAW",
            "name": "H_RAW",
            "optional": true,
            "type": "String",
            "value-key": "[H_RAW]"
        },
        {
            "command-line-flag": "-h_spx",
            "description": "Help string in sphinx loveliness, but do not try to autoformat",
            "id": "H_SPX",
            "name": "H_SPX",
            "optional": true,
            "type": "String",
            "value-key": "[H_SPX]"
        },
        {
            "command-line-flag": "-h_aspx",
            "description": "Help string in sphinx with autoformatting of options, etc.",
            "id": "H_ASPX",
            "name": "H_ASPX",
            "optional": true,
            "type": "String",
            "value-key": "[H_ASPX]"
        },
        {
            "command-line-flag": "-all_opts",
            "description": "Try to identify all options for the program from the output of its -help option. Some options might be missed and others misidentified. Use this output for hints only.",
            "id": "ALL_OPTS",
            "name": "ALL_OPTS",
            "optional": true,
            "type": "String",
            "value-key": "[ALL_OPTS]"
        },
        {
            "command-line-flag": "-overwrite",
            "description": "Overwrite existing output dataset. Equivalent to setting env. AFNI_DECONFLICT=OVERWRITE",
            "id": "OVERWRITE",
            "name": "OVERWRITE",
            "optional": true,
            "type": "String",
            "value-key": "[OVERWRITE]"
        },
        {
            "command-line-flag": "-ok_1D_text",
            "description": "Zero out uncommented text in 1D file. Equivalent to setting env. AFNI_1D_ZERO_TEXT=YES",
            "id": "OK_1D_TEXT",
            "name": "OK_1D_TEXT",
            "optional": true,
            "type": "String",
            "value-key": "[OK_1D_TEXT]"
        },
        {
            "command-line-flag": "-Dname",
            "description": "al: Set environment variable 'name' to value 'val' For example: -DAFNI_1D_ZERO_TEXT=YES",
            "id": "DNAME",
            "name": "DNAME",
            "optional": true,
            "type": "String",
            "value-key": "[DNAME]"
        },
        {
            "command-line-flag": "-Vname",
            "description": "Print value of environment variable 'name' to stdout and quit. This is more reliable that the shell's env query because it would include envs set in .afnirc files and .sumarc files for SUMA programs. For example: -VAFNI_1D_ZERO_TEXT=",
            "id": "VNAME",
            "name": "VNAME",
            "optional": true,
            "type": "String",
            "value-key": "[VNAME]"
        },
        {
            "command-line-flag": "-skip_afnirc",
            "description": "Do not read the afni resource (like ~/.afnirc) file.",
            "id": "SKIP_AFNIRC",
            "name": "SKIP_AFNIRC",
            "optional": true,
            "type": "String",
            "value-key": "[SKIP_AFNIRC]"
        },
        {
            "command-line-flag": "-pad_to_node",
            "description": "Output a full dset from node 0 to MAX_NODE-1 ** Instead of directly setting NODE to an integer you can set NODE to something like: ld120 (or rd17) which sets NODE to be the maximum node index on an Icosahedron with -ld 120. See CreateIcosahedron for details. d:DSET.niml.dset which sets NODE to the maximum node found in dataset DSET.niml.dset. ** This option is for surface-based datasets only. Some programs may not heed it, so check the output if you are not sure.",
            "id": "PAD_TO_NODE",
            "name": "PAD_TO_NODE",
            "optional": true,
            "type": "String",
            "value-key": "[PAD_TO_NODE]"
        },
        {
            "command-line-flag": "-pif",
            "description": "Does absolutely nothing but provide for a convenient way to tag a process and find it in the output of ps -a",
            "id": "PIF",
            "name": "PIF",
            "optional": true,
            "type": "String",
            "value-key": "[PIF]"
        },
        {
            "command-line-flag": "-echo_edu",
            "description": "Echos the entire command line to stdout (without -echo_edu) for edification purposes  Example 1: afni -yesplugouts plugout_drive  -com 'SWITCH_SESSION A.afni'                       \\",
            "id": "ECHO_EDU",
            "name": "ECHO_EDU",
            "optional": true,
            "type": "String",
            "value-key": "[ECHO_EDU]"
        }
    ],
    "name": "tool name",
    "schema-version": "0.5",
    "suggested-resources": {
        "cpu-cores": 1,
        "ram": 1,
        "walltime-estimate": 60
    },
    "tags": {},
    "tool-version": "v0.1.0"
}