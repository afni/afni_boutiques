{
    "command-line": "@MakeLabelTable [LABELTABLE] [ATLAS_POINTLIST] [LAB_R] [LAB_V] [LAB_FILE] [LAB_FILE_DELIM] [DSET] [CENTERS] [SKIP_NOVOXELS] [ALL_LABELS] [ALL_KEYS] [LKEYS] [RKEYS] [KLABEL] [MATCH_LABEL] [LABELTABLE_OF_DSET] [WORD_LABEL_MATCH] [QUIET_DEATH] [LT_TO_ATLAS_PL] [DSET_LT_TO_ATLAS_PL] [ATLASIZE_LABELED_DSET] [ATLAS_FILE] [ATLAS_NAME] [ATLAS_DESCRIPTION] [REPLACE] [ADD_ATLAS_DSET] [H_WEB] [HWEB] [H_VIEW] [HVIEW] [ALL_OPTS] [H_FIND] [<-LABELTABLE] [LABELTABLE>]",
    "description": "tool description",
    "inputs": [
        {
            "command-line-flag": "-labeltable",
            "description": "Name of output label table",
            "id": "LABELTABLE",
            "name": "LABELTABLE",
            "optional": true,
            "type": "String",
            "value-key": "[LABELTABLE]"
        },
        {
            "command-line-flag": "-atlas_pointlist",
            "description": "Instead of a label table produce an atlas point list",
            "id": "ATLAS_POINTLIST",
            "name": "ATLAS_POINTLIST",
            "optional": true,
            "type": "String",
            "value-key": "[ATLAS_POINTLIST]"
        },
        {
            "command-line-flag": "-lab_r",
            "description": "Define a label LAB its minimum key MIN and its maximum value MAX. For example: -lab_r GM 5 7 generates in the labeltable: \"5\" \"GM01\" \"6\" \"GM02\" \"7\" \"GM03\"",
            "id": "LAB_R",
            "name": "LAB_R",
            "optional": true,
            "type": "String",
            "value-key": "[LAB_R]"
        },
        {
            "command-line-flag": "-lab_v",
            "description": "Define a label LAB and its value KEY For example: -lab_v  WM 8 generates in the labeltable: \"8\" \"WM\"",
            "id": "LAB_V",
            "name": "LAB_V",
            "optional": true,
            "type": "String",
            "value-key": "[LAB_V]"
        },
        {
            "command-line-flag": "-lab_file",
            "description": "Labels and keys are in text file FILE. cLAB is the index of column containing labels vVAL is the index of column containing keys (1st column is indexed at 0)",
            "id": "LAB_FILE",
            "name": "LAB_FILE",
            "optional": true,
            "type": "String",
            "value-key": "[LAB_FILE]"
        },
        {
            "command-line-flag": "-lab_file_delim",
            "description": "Set column delimiter for -lab_file option Default is ' ' (space), but you can set your own. ';' for example. Note that the delimiter is passed directly to awk's -F Note: This option must be set BEFORE -lab_file option on the command line.",
            "id": "LAB_FILE_DELIM",
            "name": "LAB_FILE_DELIM",
            "optional": true,
            "type": "String",
            "value-key": "[LAB_FILE_DELIM]"
        },
        {
            "command-line-flag": "-dset",
            "description": "Attach the label table (or atlas point list) to dataset DSET",
            "id": "DSET",
            "name": "DSET",
            "optional": true,
            "type": "String",
            "value-key": "[DSET]"
        },
        {
            "command-line-flag": "-centers",
            "description": "Compute center of mass location for each ROI requires simple blobbish ROIs to work",
            "id": "CENTERS",
            "name": "CENTERS",
            "optional": true,
            "type": "String",
            "value-key": "[CENTERS]"
        },
        {
            "command-line-flag": "-skip_novoxels",
            "description": "Skip regions without voxels  Note that you cannot use the same key for multiple labels. When redundancies occur, the script preserves just one entry.  Example: @MakeLabelTable   -lab_r CSF 1 3 -lab_r GM 5 7 -lab_v WM 8  \\ -labeltable example1  Usage mode 2: Get information about an existing labeltable @MakeLabelTable <-labeltable LABELTABLE> <[-lkeys LABEL] | [-rkeys LABEL] | [-all_labels] | [-all_keys]>",
            "id": "SKIP_NOVOXELS",
            "name": "SKIP_NOVOXELS",
            "optional": true,
            "type": "String",
            "value-key": "[SKIP_NOVOXELS]"
        },
        {
            "command-line-flag": "-all_labels",
            "description": "Return a listing of the labels",
            "id": "ALL_LABELS",
            "name": "ALL_LABELS",
            "optional": true,
            "type": "String",
            "value-key": "[ALL_LABELS]"
        },
        {
            "command-line-flag": "-all_keys",
            "description": "Return a listing of all keys",
            "id": "ALL_KEYS",
            "name": "ALL_KEYS",
            "optional": true,
            "type": "String",
            "value-key": "[ALL_KEYS]"
        },
        {
            "command-line-flag": "-lkeys",
            "description": "Return the keys whose labels match LABEL",
            "id": "LKEYS",
            "name": "LKEYS",
            "optional": true,
            "type": "String",
            "value-key": "[LKEYS]"
        },
        {
            "command-line-flag": "-rkeys",
            "description": "Return the range (min max) of keys whose labels match LABEL",
            "id": "RKEYS",
            "name": "RKEYS",
            "optional": true,
            "type": "String",
            "value-key": "[RKEYS]"
        },
        {
            "command-line-flag": "-klabel",
            "description": "Return the label associated with KEY",
            "id": "KLABEL",
            "name": "KLABEL",
            "optional": true,
            "type": "String",
            "value-key": "[KLABEL]"
        },
        {
            "command-line-flag": "-match_label",
            "description": "Return labels matching LABEL",
            "id": "MATCH_LABEL",
            "name": "MATCH_LABEL",
            "optional": true,
            "type": "String",
            "value-key": "[MATCH_LABEL]"
        },
        {
            "command-line-flag": "-labeltable_of_dset",
            "description": "Dump the labeltable from DSET",
            "id": "LABELTABLE_OF_DSET",
            "name": "LABELTABLE_OF_DSET",
            "optional": true,
            "type": "String",
            "value-key": "[LABELTABLE_OF_DSET]"
        },
        {
            "command-line-flag": "-word_label_match",
            "description": "Use word matching (grep's -w ) With this option, 'Out' matches 'Out.l1' but no longer matches 'OutSk'",
            "id": "WORD_LABEL_MATCH",
            "name": "WORD_LABEL_MATCH",
            "optional": true,
            "type": "String",
            "value-key": "[WORD_LABEL_MATCH]"
        },
        {
            "command-line-flag": "-quiet_death",
            "description": "Do not give error messages when failing Options in usage 2 are mutually exclusive  Usage mode 3: Transform Label Tables to Atlas Point Lists and exit @MakeLabelTable [<-LT_to_atlas_PL LABELTABLE>] [<-dset_LT_to_atlas_PL DSET POINTLIST]",
            "id": "QUIET_DEATH",
            "name": "QUIET_DEATH",
            "optional": true,
            "type": "String",
            "value-key": "[QUIET_DEATH]"
        },
        {
            "command-line-flag": "-LT_to_atlas_PL",
            "description": "Transform Label Table LABELTABLE to Atlas Point List",
            "id": "LT_TO_ATLAS_PL",
            "name": "LT_TO_ATLAS_PL",
            "optional": true,
            "type": "String",
            "value-key": "[LT_TO_ATLAS_PL]"
        },
        {
            "command-line-flag": "-dset_LT_to_atlas_PL",
            "description": "Get Label Table in DSET and write it out as an Atlas Point List to POINTLIST  Example: @MakeLabelTable -LT_to_atlas_PL aparc.a2009s+aseg_rank.niml.lt  Usage mode 4: Turn a labeled dataset or an integral valued dset into an ATLAS @MakeLabelTable [<-atlasize_labeled_dset SOME_LABELED_ROI_DSET>] [<-atlas_file ATLAS_NIML_FILE] [<-atlas_name ATLAS_NAME>] [-replace]",
            "id": "DSET_LT_TO_ATLAS_PL",
            "name": "DSET_LT_TO_ATLAS_PL",
            "optional": true,
            "type": "String",
            "value-key": "[DSET_LT_TO_ATLAS_PL]"
        },
        {
            "command-line-flag": "-atlasize_labeled_dset",
            "description": "Change a labeled ROI dataset into an atlas",
            "id": "ATLASIZE_LABELED_DSET",
            "name": "ATLASIZE_LABELED_DSET",
            "optional": true,
            "type": "String",
            "value-key": "[ATLASIZE_LABELED_DSET]"
        },
        {
            "command-line-flag": "-atlas_file",
            "description": "Specify the name of the NIML file where atlas attributes are stored. Default is ./SessionAtlases.niml which is a good choice for single subject atlases",
            "id": "ATLAS_FILE",
            "name": "ATLAS_FILE",
            "optional": true,
            "type": "String",
            "value-key": "[ATLAS_FILE]"
        },
        {
            "command-line-flag": "-atlas_name",
            "description": "Atlas is named based on the prefix, by default. You can override that with this option.",
            "id": "ATLAS_NAME",
            "name": "ATLAS_NAME",
            "optional": true,
            "type": "String",
            "value-key": "[ATLAS_NAME]"
        },
        {
            "command-line-flag": "-atlas_description",
            "description": "Atlas description, which appears in afni's whereami window. Default is 'My Atlas'",
            "id": "ATLAS_DESCRIPTION",
            "name": "ATLAS_DESCRIPTION",
            "optional": true,
            "type": "String",
            "value-key": "[ATLAS_DESCRIPTION]"
        },
        {
            "command-line-flag": "-replace",
            "description": "If ATLAS_NAME is already in ATLAS_NIML_FILE, the script will fail to proceed unless you instruct it to do so this option",
            "id": "REPLACE",
            "name": "REPLACE",
            "optional": true,
            "type": "String",
            "value-key": "[REPLACE]"
        },
        {
            "command-line-flag": "-add_atlas_dset",
            "description": "Use if you have an atlas that you want added to an atlas_file.  Example: @MakeLabelTable -atlasize_labeled_dset SOME_LABELED_ROI_DSET or you can specify the keys in a file: @MakeLabelTable -lab_file FILE cLAB cVAL \\ -atlas_pointlist apl \\ -dset target_dset \\ -atlas_file SessionAtlases.niml  ------------------------- See also @Atlasize script -------------------------  Global Help Options: --------------------",
            "id": "ADD_ATLAS_DSET",
            "name": "ADD_ATLAS_DSET",
            "optional": true,
            "type": "String",
            "value-key": "[ADD_ATLAS_DSET]"
        },
        {
            "command-line-flag": "-h_web",
            "description": "Open webpage with help for this program",
            "id": "H_WEB",
            "name": "H_WEB",
            "optional": true,
            "type": "String",
            "value-key": "[H_WEB]"
        },
        {
            "command-line-flag": "-hweb",
            "description": "Same as -h_web",
            "id": "HWEB",
            "name": "HWEB",
            "optional": true,
            "type": "String",
            "value-key": "[HWEB]"
        },
        {
            "command-line-flag": "-h_view",
            "description": "Open -help output in a GUI editor",
            "id": "H_VIEW",
            "name": "H_VIEW",
            "optional": true,
            "type": "String",
            "value-key": "[H_VIEW]"
        },
        {
            "command-line-flag": "-hview",
            "description": "Same as -hview",
            "id": "HVIEW",
            "name": "HVIEW",
            "optional": true,
            "type": "String",
            "value-key": "[HVIEW]"
        },
        {
            "command-line-flag": "-all_opts",
            "description": "List all of the options for this script",
            "id": "ALL_OPTS",
            "name": "ALL_OPTS",
            "optional": true,
            "type": "String",
            "value-key": "[ALL_OPTS]"
        },
        {
            "command-line-flag": "-h_find",
            "description": "Search for lines containing WORD in -help output. Seach is approximate.",
            "id": "H_FIND",
            "name": "H_FIND",
            "optional": true,
            "type": "String",
            "value-key": "[H_FIND]"
        },
        {
            "description": "NA",
            "id": "<-labeltable",
            "name": "<-labeltable",
            "optional": false,
            "type": "String",
            "value-key": "[<-LABELTABLE]"
        },
        {
            "description": "NA",
            "id": "LABELTABLE>",
            "name": "LABELTABLE>",
            "optional": false,
            "type": "String",
            "value-key": "[LABELTABLE>]"
        }
    ],
    "name": "tool name",
    "schema-version": "0.5",
    "suggested-resources": {
        "cpu-cores": 1,
        "ram": 1,
        "walltime-estimate": 60
    },
    "tags": {},
    "tool-version": "v0.1.0"
}