{
    "command-line": "3dZcat [PREFIX] [DATUM] [FSCALE] [NSCALE] [VERB] [FRUGAL] [DATASET] [...]",
    "description": "tool description",
    "inputs": [
        {
            "command-line-flag": "-prefix",
            "description": "Use 'pname' for the output dataset prefix name. [default='zcat']",
            "id": "PREFIX",
            "name": "PREFIX",
            "optional": true,
            "type": "String",
            "value-key": "[PREFIX]"
        },
        {
            "command-line-flag": "-datum",
            "description": "Coerce the output data to be stored as the given type, which may be byte, short, or float.",
            "id": "DATUM",
            "name": "DATUM",
            "optional": true,
            "type": "String",
            "value-key": "[DATUM]"
        },
        {
            "command-line-flag": "-fscale",
            "description": "Force scaling of the output to the maximum integer range.  This only has effect if the output datum is byte or short (either forced or defaulted). This option is sometimes necessary to eliminate unpleasant truncation artifacts.",
            "id": "FSCALE",
            "name": "FSCALE",
            "optional": true,
            "type": "String",
            "value-key": "[FSCALE]"
        },
        {
            "command-line-flag": "-nscale",
            "description": "Don't do any scaling on output to byte or short datasets. This may be especially useful when operating on mask datasets whose output values are only 0's and 1's.",
            "id": "NSCALE",
            "name": "NSCALE",
            "optional": true,
            "type": "String",
            "value-key": "[NSCALE]"
        },
        {
            "command-line-flag": "-verb",
            "description": "Print out some verbositiness as the program proceeds.",
            "id": "VERB",
            "name": "VERB",
            "optional": true,
            "type": "String",
            "value-key": "[VERB]"
        },
        {
            "command-line-flag": "-frugal",
            "description": "Be 'frugal' in the use of memory, at the cost of I/O time. Only needed if the program runs out of memory. Note frugality cannot be combined with NIFTI output  Command line arguments after the above are taken as input datasets.  Notes: * You can use the '3dinfo' program to see how many slices a dataset comprises. * There must be at least two datasets input (otherwise, the program doesn't make much sense, does it?). * Each input dataset must have the same number of voxels in each slice, and must have the same number of sub-bricks. * This program does not deal with complex-valued datasets. * See the output of '3dZcutup -help' for a C shell script that can be used to take a dataset apart into single slice datasets, analyze them separately, and then assemble the results into new 3D datasets. * Also see program 3dXYZcat for a version that can catenate along the x and y axes as well (with some limitations).  ++ Compile date = Sep  7 2018 {:}",
            "id": "FRUGAL",
            "name": "FRUGAL",
            "optional": true,
            "type": "String",
            "value-key": "[FRUGAL]"
        },
        {
            "description": "NA",
            "id": "dataset",
            "name": "dataset",
            "optional": false,
            "type": "String",
            "value-key": "[DATASET]"
        },
        {
            "description": "NA",
            "id": "...",
            "name": "...",
            "optional": false,
            "type": "String",
            "value-key": "[...]"
        }
    ],
    "name": "tool name",
    "schema-version": "0.5",
    "suggested-resources": {
        "cpu-cores": 1,
        "ram": 1,
        "walltime-estimate": 60
    },
    "tags": {},
    "tool-version": "v0.1.0"
}